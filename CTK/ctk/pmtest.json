{"info":{"_postman_id":"7a010161-39e7-444d-a57b-0f0fb467c532","name":"CTK-Partnership-4.0.0","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json","_exporter_id":"7503975","_collection_link":"https://cloudy-meadow-674386.postman.co/workspace/v4.0.0CTKs~c3a3165b-0479-4ccd-bebb-f737fd593b7f/collection/7503975-7a010161-39e7-444d-a57b-0f0fb467c532?action=share&source=collection_link&creator=7503975"},"item":[{"name":"N1","item":[{"name":"/partnershipSpecification","event":[{"listen":"test","script":{"exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['@type', 'href', 'id', 'name'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","pm.test('Response has @type attribute', function() { pm.expect(instance[\"@type\"]).to.be.a('string'); });","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","","pm.globals.set('@BASETYPEPS01', instance['@baseType']);","pm.globals.set('@SCHEMALOCATIONPS01', instance['@schemaLocation']);","pm.globals.set('HREFPS01', instance['href']);","pm.globals.set('IDPS01', instance['id']);","pm.globals.set('NAMEPS01', instance['name']);","pm.globals.set('DESCRIPTIONPS01', instance['description']);","pm.globals.set('ROLESPECIFICATIONPS01', instance['roleSpecification']);","","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\"name\":\"Dream Partnership template\"}","options":{"raw":{"language":"json"}}},"url":{"raw":"http://localhost:3000/tmf-api/partnershipManagement/v4/partnershipSpecification","host":["http://localhost:3000/tmf-api/partnershipManagement/v4/partnershipSpecification"]},"description":"This operation creates a partnershipSpecification"},"response":[]},{"name":"/partnershipSpecification","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['@type', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","        pm.test('Response has @type attribute', function() { pm.expect(instance[\"@type\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPS01');});","            pm.test('id is ' + pm.globals.get(\"IDPS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPS01');});","        }","        if (instance.id == pm.globals.get(\"IDPS02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPS02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPS02');});","            pm.test('id is ' + pm.globals.get(\"IDPS02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPS02');});","            pm.test('name is ' + pm.globals.get(\"NAMEPS02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPS02');});","        }  ","    });","}","else {","    var instance = pm.response.json();","    var requiredAttributes = ['@type', 'href', 'id', 'name'];","      ","    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","  ","    pm.test('Response has @type attribute', function() { pm.expect(instance[\"@type\"]).to.be.a('string'); });","    pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","    pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","    pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","  ","    pm.test('Body includes value held on href', function () {","        pm.expect(pm.response.text()).to.include(instance['href']);","    });","    pm.test('Body includes value held on id', function () {","        pm.expect(pm.response.text()).to.include(instance['id']);","    });","    pm.test('Body includes value held on name', function () {","        pm.expect(pm.response.text()).to.include(instance['name']);","    });","    // Individualized tests","    if (instance.id == pm.globals.get(\"IDPS01\")) {","        pm.test('href is ' + pm.globals.get(\"HREFPS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPS01');});","        pm.test('id is ' + pm.globals.get(\"IDPS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPS01');});","        pm.test('name is ' + pm.globals.get(\"NAMEPS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPS01');});","    }","    if (instance.id == pm.globals.get(\"IDPS02\")) {","        pm.test('href is ' + pm.globals.get(\"HREFPS02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPS02');});","        pm.test('id is ' + pm.globals.get(\"IDPS02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPS02');});","        pm.test('name is ' + pm.globals.get(\"NAMEPS02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPS02');});","    }","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"http://localhost:3000/tmf-api/partnershipManagement/v4/partnershipSpecification","host":["http://localhost:3000/tmf-api/partnershipManagement/v4/partnershipSpecification"]},"description":"This operation search for the created partnershipSpecification"},"response":[]},{"name":"/partnershipSpecification/{{IDPS01}}","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['@type', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","        pm.test('Response has @type attribute', function() { pm.expect(instance[\"@type\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPS01\")) {","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPEPS01\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPEPS01');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONPS01\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONPS01');});","            pm.test('href is ' + pm.globals.get(\"HREFPS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPS01');});","            pm.test('id is ' + pm.globals.get(\"IDPS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPS01');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONPS01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONPS01');});","            pm.test('roleSpecification is ' + pm.globals.get(\"ROLESPECIFICATIONPS01\"), function() {pm.expect(instance['roleSpecification']) == pm.globals.get('ROLESPECIFICATIONPS01');});","        }","        if (instance.id == pm.globals.get(\"IDPS02\")) {","            pm.test('IDPS02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', '@type', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has @type attribute', function() { pm.expect(instance[\"@type\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPS01\")) {","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPEPS01\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPEPS01');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONPS01\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONPS01');});","            pm.test('href is ' + pm.globals.get(\"HREFPS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPS01');});","            pm.test('id is ' + pm.globals.get(\"IDPS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPS01');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONPS01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONPS01');});","            pm.test('roleSpecification is ' + pm.globals.get(\"ROLESPECIFICATIONPS01\"), function() {pm.expect(instance['roleSpecification']) == pm.globals.get('ROLESPECIFICATIONPS01');});","        }","        if (instance.id == pm.globals.get(\"IDPS02\")) {","            pm.test('IDPS02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"http://localhost:3000/tmf-api/partnershipManagement/v4/partnershipSpecification/{{IDPS01}}","host":["http://localhost:3000/tmf-api/partnershipManagement/v4/partnershipSpecification"],"path":["{{IDPS01}}"]},"description":"This operation search for one of the created partnershipSpecification"},"response":[]}]},{"name":"N2","item":[{"name":"/partnershipSpecification?fields=id","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPS01');});","            pm.test('id is ' + pm.globals.get(\"IDPS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPS01');});","        }","        if (instance.id == pm.globals.get(\"IDPS02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPS02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPS02');});","            pm.test('id is ' + pm.globals.get(\"IDPS02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPS02');});","        }  ","    });","}","else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id'];","      ","    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","  ","    pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","    pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","    ","    pm.test('Body includes value held on href', function () {","        pm.expect(pm.response.text()).to.include(instance['href']);","    });","    pm.test('Body includes value held on id', function () {","        pm.expect(pm.response.text()).to.include(instance['id']);","    });","    // Individualized tests","    if (instance.id == pm.globals.get(\"IDPS01\")) {","        pm.test('href is ' + pm.globals.get(\"HREFPS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPS01');});","        pm.test('id is ' + pm.globals.get(\"IDPS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPS01');});","    }","    if (instance.id == pm.globals.get(\"IDPS02\")) {","        pm.test('href is ' + pm.globals.get(\"HREFPS02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPS02');});","        pm.test('id is ' + pm.globals.get(\"IDPS02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPS02');});","    }","}"],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"http://localhost:3000/tmf-api/partnershipManagement/v4/partnershipSpecification?fields=id","host":["http://localhost:3000/tmf-api/partnershipManagement/v4/partnershipSpecification"],"query":[{"key":"fields","value":"id"}]},"description":"This operation filter a partnershipSpecification"},"response":[]},{"name":"/partnershipSpecification?id={{IDPS01}}","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['@type', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","        pm.test('Response has @type attribute', function() { pm.expect(instance[\"@type\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPS01');});","            pm.test('id is ' + pm.globals.get(\"IDPS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPS01');});","        }","        if (instance.id == pm.globals.get(\"IDPS02\")) {","            pm.test('IDPS02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","    });","}","else {","    var instance = pm.response.json();","    var requiredAttributes = ['@type', 'href', 'id', 'name'];","      ","    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","  ","    pm.test('Response has @type attribute', function() { pm.expect(instance[\"@type\"]).to.be.a('string'); });","    pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","    pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","    pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","  ","    pm.test('Body includes value held on href', function () {","        pm.expect(pm.response.text()).to.include(instance['href']);","    });","    pm.test('Body includes value held on id', function () {","        pm.expect(pm.response.text()).to.include(instance['id']);","    });","    pm.test('Body includes value held on name', function () {","        pm.expect(pm.response.text()).to.include(instance['name']);","    });","    // Individualized tests","    if (instance.id == pm.globals.get(\"IDPS01\")) {","        pm.test('href is ' + pm.globals.get(\"HREFPS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPS01');});","        pm.test('id is ' + pm.globals.get(\"IDPS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPS01');});","        pm.test('name is ' + pm.globals.get(\"NAMEPS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPS01');});","    }","    if (instance.id == pm.globals.get(\"IDPS02\")) {","        pm.test('IDPS02 not expected on this test', function () {","            console.log(\"Non expected resource, may happen if there is a collision on attributes\")","        });","    }","}"],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"http://localhost:3000/tmf-api/partnershipManagement/v4/partnershipSpecification?id={{IDPS01}}","host":["http://localhost:3000/tmf-api/partnershipManagement/v4/partnershipSpecification"],"query":[{"key":"id","value":"{{IDPS01}}"}]},"description":"This operation filter a partnershipSpecification"},"response":[]},{"name":"/partnershipSpecification?fields=name","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPS01');});","            pm.test('id is ' + pm.globals.get(\"IDPS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPS01');});","        }","        if (instance.id == pm.globals.get(\"IDPS02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPS02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPS02');});","            pm.test('id is ' + pm.globals.get(\"IDPS02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPS02');});","            pm.test('name is ' + pm.globals.get(\"NAMEPS02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPS02');});","        }  ","    });","}","else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'name'];","      ","    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","  ","    pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","    pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","    pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","  ","    pm.test('Body includes value held on href', function () {","        pm.expect(pm.response.text()).to.include(instance['href']);","    });","    pm.test('Body includes value held on id', function () {","        pm.expect(pm.response.text()).to.include(instance['id']);","    });","    pm.test('Body includes value held on name', function () {","        pm.expect(pm.response.text()).to.include(instance['name']);","    });","    // Individualized tests","    if (instance.id == pm.globals.get(\"IDPS01\")) {","        pm.test('href is ' + pm.globals.get(\"HREFPS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPS01');});","        pm.test('id is ' + pm.globals.get(\"IDPS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPS01');});","        pm.test('name is ' + pm.globals.get(\"NAMEPS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPS01');});","    }","    if (instance.id == pm.globals.get(\"IDPS02\")) {","        pm.test('href is ' + pm.globals.get(\"HREFPS02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPS02');});","        pm.test('id is ' + pm.globals.get(\"IDPS02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPS02');});","        pm.test('name is ' + pm.globals.get(\"NAMEPS02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPS02');});","    }","}"],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"http://localhost:3000/tmf-api/partnershipManagement/v4/partnershipSpecification?fields=name","host":["http://localhost:3000/tmf-api/partnershipManagement/v4/partnershipSpecification"],"query":[{"key":"fields","value":"name"}]},"description":"This operation filter a partnershipSpecification"},"response":[]},{"name":"/partnershipSpecification?name={{NAMEPS01}}","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['@type', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","        pm.test('Response has @type attribute', function() { pm.expect(instance[\"@type\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPS01');});","            pm.test('id is ' + pm.globals.get(\"IDPS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPS01');});","        }","        if (instance.id == pm.globals.get(\"IDPS02\")) {","            pm.test('IDPS02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","    });","}","else {","    var instance = pm.response.json();","    var requiredAttributes = ['@type', 'href', 'id', 'name'];","      ","    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","  ","    pm.test('Response has @type attribute', function() { pm.expect(instance[\"@type\"]).to.be.a('string'); });","    pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","    pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","    pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","  ","    pm.test('Body includes value held on href', function () {","        pm.expect(pm.response.text()).to.include(instance['href']);","    });","    pm.test('Body includes value held on id', function () {","        pm.expect(pm.response.text()).to.include(instance['id']);","    });","    pm.test('Body includes value held on name', function () {","        pm.expect(pm.response.text()).to.include(instance['name']);","    });","    // Individualized tests","    if (instance.id == pm.globals.get(\"IDPS01\")) {","        pm.test('href is ' + pm.globals.get(\"HREFPS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPS01');});","        pm.test('id is ' + pm.globals.get(\"IDPS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPS01');});","        pm.test('name is ' + pm.globals.get(\"NAMEPS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPS01');});","    }","    if (instance.id == pm.globals.get(\"IDPS02\")) {","        pm.test('IDPS02 not expected on this test', function () {","            console.log(\"Non expected resource, may happen if there is a collision on attributes\")","        });","    }","}"],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"http://localhost:3000/tmf-api/partnershipManagement/v4/partnershipSpecification?name={{NAMEPS01}}","host":["http://localhost:3000/tmf-api/partnershipManagement/v4/partnershipSpecification"],"query":[{"key":"name","value":"{{NAMEPS01}}"}]},"description":"This operation filter a partnershipSpecification"},"response":[]}]},{"name":"E1","item":[{"name":"/partnershipSpecification/404ID","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"http://localhost:3000/tmf-api/partnershipManagement/v4/partnershipSpecification/5255917z-zz41-4450-8144-6z1z821z4786","host":["http://localhost:3000/tmf-api/partnershipManagement/v4/partnershipSpecification"],"path":["5255917z-zz41-4450-8144-6z1z821z4786"]},"description":"This operation search for one of the created partnershipSpecification"},"response":[]}]}]}